openapi: 3.0.1
info:
  title: Scheduer Service
  description: This service is going to offload the services of handling the scheduling
    logic by registering the triggers
  version: 0.0.1
servers:
- url: /api/v1/scheduler
paths:
  /jobs:
    post:
      tags:
      - Job
      summary: add a new job to scheuder
      operationId: addJob
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Job'
      deprecated: false  
    get:
      tags:
      - Job
      summary: get all jobs
      operationId: find jobs
      responses:
        200:
          description: List of Service
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
      deprecated: false
  /jobs/{jobGroup}/{jobName}:
    get:
      tags:
      - Job
      summary: get a job by job key
      operationId: getJob
      parameters:
      - name: jobGroup
        in: path
        required: true
        schema:
          type: string
      - name: jobName
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Service
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Job'
      deprecated: false
    put:
      tags:
      - Job
      summary: update a job by job key
      operationId: updateJob
      parameters:
      - name: jobGroup
        in: path
        required: true
        schema:
          type: string
      - name: jobName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: A JSON object containing job information
        content:
           '*/*':
            schema:
             $ref: '#/components/schemas/Job'
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Job'
      deprecated: false        
    delete:
      tags:
      - Job
      summary: delete a job by job key
      operationId: deleteJob
      parameters:
      - name: jobGroup
        in: path
        required: true
        schema:
          type: string
      - name: jobName
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: delete success
          content: {}
      deprecated: false
  /triggers:
    post:
      tags:
      - Trigger
      summary: add a trigger for a existing job
      operationId: add a trigger for a job
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Trigger'
        required: true
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Trigger'
      deprecated: false
      x-codegen-request-body-name: trigger  
    get:
      tags:
      - Trigger
      summary: get all triggers
      operationId: find all triggers
      responses:
        200:
          description: List of Service
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trigger'
      deprecated: false
  /triggers/{triggerGroup}/{triggerName}:
    get:
      tags:
      - Trigger
      summary: get a trigger by key
      operationId: get a trigger by key
      parameters:
      - name: triggerGroup
        in: path
        required: true
        schema:
          type: string
      - name: triggerName
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Trigger'
      deprecated: false
    put:
      tags:
      - Trigger
      summary: update a trigger by key
      operationId: updateTrigger
      parameters:
      - name: triggerGroup
        in: path
        required: true
        schema:
          type: string
      - name: triggerName
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: A JSON object containing trigger information
        content:
           '*/*':
            schema:
             $ref: '#/components/schemas/Trigger'
      responses:
        200:
          description: Success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Trigger'
      deprecated: false          
    delete:
      tags:
      - Trigger
      summary: delete a trigger by key
      operationId: delete a trigger
      parameters:
      - name: triggerGroup
        in: path
        required: true
        schema:
          type: string
      - name: triggerName
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: delete success
          content: {}
      deprecated: false
components:
  schemas:
    Job:
      type: object
      properties:
        id:
          type: string
          example: a471f600-1e72-4b14-b054-b5bc55e355de
        name:
          type: string
          description: Job keys are composed of both a name and group, and the name
            must be unique within the group
          example: reportingJob
        group:
          type: string
          description: Job keys are composed of both a name and group, and use the
            group to orgnize jobs
          example: batchJob
        isDurable:
          type: boolean
          description: Whether or not the Job should remain stored after it is orphaned
            (no Triggers point to it).If not explicitly set, the default value is
            true
        description:
          type: string
          example: optional description.
        type:
          type: string
          description: the type of this job. e.g. this job will call a rest api to
            fire a business task.
          enum:
          - jms
          - restApi
        status:
          type: string
          enum:
          - active
          - paused
        jobDataMap:
          type: object
          additionalProperties:
            type: string
            example: ""
        triggers:
          type: array
          description: if the array is not null, will schedue the job by triggers
          items:
            $ref: '#/components/schemas/Trigger'
    Trigger:
      type: object
      properties:
        id:
          type: string
          example: 60fa6d5fce039f6a4cdd8733
        name:
          type: string
          description: Trigger keys are composed of both a name and group, and the
            name must be unique within the group
          example: endOfDayTrigger
        group:
          type: string
          description: Trigger keys are composed of both a name and group, and use
            the group to orgnize Triggers
          example: batchJobTrigger
        description:
          type: string
          example: optional description.
        jobName:
          type: string
          description: the name of the job this trigger is bindling to
        jobGroup:
          type: string
          description: the group of the job this trigger is bindling to
        type:
          type: string
          description: cron trigger or simple trigger. if cron, the cron expression
            is required
          enum:
          - cron
          - simple
        cronExpression:
          type: string
          description: the cron expression for this trigger
          example: 0/30 * * * * ?
        startTime:
          type: string
          description: the time at which the Trigger should occur
          format: date-time
        endTime:
          type: string
          description: the time at which the Trigger should quit repeating
          format: date-time
        interval:
          type: integer
          description: the time interval (in milliseconds) at which the SimpleTrigger
            should repeat
          example: 30000
        repeatCount:
          type: integer
          description: the number of times the SimpleTrigger should repeat, after
            which it will be automatically deleted
          example: 3
